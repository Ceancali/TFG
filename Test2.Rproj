rm(list = ls())

library(quantmod)
library(caret)
library(randomForest)
library(openxlsx)

getSymbols("IBE.MC", src = "yahoo", from = "2021-01-01", to = "2024-01-01")
stock_Data <- merge(Ad(IBE.MC))
colnames(stock_Data) <- c("IBE.MC_AdjClose")

# Calculating log returns
stock_Data$IBE.MC_LogReturn <- diff(log(stock_Data$IBE.MC_AdjClose), lag = 1)
stock_Data <- na.omit(stock_Data)

# Calculating SMAs
stock_Data$IBE.MC_SMA10 <- SMA(stock_Data$IBE.MC_AdjClose, n = 10)
stock_Data$IBE.MC_SMA30 <- SMA(stock_Data$IBE.MC_AdjClose, n = 30)
stock_Data <- na.omit(stock_Data)

# Calculating RSI
stock_Data$IBE.MC_RSI <- RSI(Cl(IBE.MC), n = 14)
stock_Data <- na.omit(stock_Data)

stock_Data$IBE.MC_SimpleReturn <- exp(stock_Data$IBE.MC_LogReturn) - 1

# Split the data into training and test sets (80% train, 20% test)
set.seed(123)
split_index <- floor(0.8 * nrow(stock_Data))
train <- stock_Data[1:split_index, ]
test <- stock_Data[(split_index + 1):nrow(stock_Data), ]

# Train control for cross-validation
trainControl <- trainControl(
  method = "cv",
  number = 10,  # Number of cross-validation folds
  savePredictions = "final",
  verboseIter = TRUE
)

# Train the Random Forest model
rf_model <- train(
  IBE.MC_LogReturn ~ IBE.MC_SMA10 + IBE.MC_SMA30 + IBE.MC_RSI,
  data = train,
  method = "rf",
  trControl = trainControl,
  ntree = 500,
  tuneLength = 3
)

print(rf_model)

# Predicting on the test set
predictions_rf <- predict(rf_model, newdata = test)

# Converting predictions to simple returns and calculate cumulative returns
predictions_rf_simple <- exp(predictions_rf) - 1
cumulative_returns_rf <- cumprod(1 + predictions_rf_simple) - 1
cumulative_returns_rf_per <- cumulative_returns_rf * 100

# Printing predictions and cumulative returns
print(paste("Random Forest Predictions (in %):", round(predictions_rf_simple * 100, 4)))
print(paste("Cumulative Returns (%):", round(cumulative_returns_rf_per, 4)))

# Create data frame for predictions and cumulative returns
results <- data.frame(
  Date = index(test),
  Actual_LogReturn = test$IBE.MC_LogReturn,
  Predicted_LogReturn = predictions_rf,
  Predicted_SimpleReturn = predictions_rf_simple,
  Cumulative_Return = cumulative_returns_rf_per
)


# Calculating and printing RMSE
rmse_rf <- sqrt(mean((predictions_rf - test$IBE.MC_LogReturn)^2))
print(paste("RMSE (Random Forest):", rmse_rf))

write.xlsx(stock_Data, file = "StockDataIBE.MC.xlsx", sheetName = "StockData", rowNames = TRUE)
write.xlsx(results, file = "IBE.MCPredictions.xlsx", sheetName = "Predictions", rowNames = TRUE)


